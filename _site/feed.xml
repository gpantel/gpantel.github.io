<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.4.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2017-06-23T20:00:10-04:00</updated><id>http://localhost:4000/</id><title type="html">Scratchings on biomoleclar simulation and theory</title><subtitle>Posts from a PhD student about biomolecular simulation methods and analyses</subtitle><author><name>George A. Pantelopulos</name><email>gpantel@bu.edu</email></author><entry><title type="html">Lipid Mixing Entropy with Voronoi Tessellation</title><link href="http://localhost:4000/analysis-method/mixent/" rel="alternate" type="text/html" title="Lipid Mixing Entropy with Voronoi Tessellation" /><published>2017-06-23T20:00:00-04:00</published><updated>2017-06-23T20:00:00-04:00</updated><id>http://localhost:4000/analysis-method/mixent</id><content type="html" xml:base="http://localhost:4000/analysis-method/mixent/">&lt;p&gt;I discuss mixing entropy as an order parameter for lipid mixing and describe a Voronoi tessellation-based method and calculation using MDAnalysis and scipy.&lt;/p&gt;

&lt;script type=&quot;text/javascript&quot; async=&quot;&quot; src=&quot;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML&quot;&gt;
&lt;/script&gt;

&lt;h1 id=&quot;lateral-heterogeneity-in-the-cell-membrane&quot;&gt;Lateral Heterogeneity in the Cell Membrane&lt;/h1&gt;

&lt;p&gt;Membranes are composed of an incredibly complicated mixture of proteins, lipids, and glycomolecules. There can be many domains of molecules over the surface of the membrane which are structurally distinct. Protein structures and thus functions can be different depending on what kind of domain they sit within. For many years people have worked to understand how these domains form.&lt;/p&gt;

&lt;p&gt;There are over one hundred lipids that may compose a cell membrane. These mix together, increasing the entropy of the mixture until the enthalpic benefit of interacting with similar lipids and the entropic benefit of mixing with different lipids balance out.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/Membrane/thykaloid_marrink.jpeg&quot; alt=&quot;Marrink thykaloid&quot; /&gt;&lt;br /&gt;
&lt;strong&gt;Figure:&lt;/strong&gt; Complex mixture of a plant membrane constructed with coarse-grained lipids by &lt;a href=&quot;http://cgmartini.nl/&quot;&gt;Marrink and coworkers.&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;lipid-mixing-entropy&quot;&gt;Lipid Mixing Entropy&lt;/h1&gt;

&lt;p&gt;To quantify how “mixed” a lipid membrane is, many have employed a measure of “mixing entropy” (&lt;em&gt;S&lt;sub&gt;mix&lt;/sub&gt;&lt;/em&gt;). The most common way this has been done is by gridding each leaflet of the membrane in to &lt;em&gt;M&lt;/em&gt;  regions and counting the fraction of each j&lt;sup&gt;th&lt;/sup&gt; lipid (&lt;em&gt;p&lt;sub&gt;j&lt;/sub&gt;&lt;/em&gt;) within each i&lt;sup&gt;th&lt;/sup&gt; region, and then taking the mean of the entropies calculated for all regions[1]:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;S_{mix} = -\frac{1}{N_{regions}} \sum^{N_{regions}}_{i=1} \sum^{M}_{j=1} p_j(i) \log(p_j(i))&lt;/script&gt;

&lt;p&gt;However, this method is limited in that the solution is dependent on how the system is split into these regions. Other methods, which rely on the identification of nearest neighbors which require selection of cutoffs for neighbor detection or separation of the system into regions.[2] Ideally, the mixing entropy should be measured without any kind of cutoff or gridding scheme that can influence the result.&lt;/p&gt;

&lt;p&gt;In a recently submitted paper about finite size effects of lipid domain formation, we developed and employed a novel method of evaluating mixing entropy using Voronoi tessellations of lipid head groups. This method is quite simple in that it simply involves counting Voronoi edges formed between pairs of lipids. With this method there is no need to separate the system in to regions or to use arbitrary cutoffs for determining the neighbors of lipids. The mixing entropy is simply written as&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;S_{mix} = -\sum^{E}_{j=1} p_j \log_E(p_j),&lt;/script&gt;

&lt;p&gt;where there are &lt;em&gt;E&lt;/em&gt; types of voronoi edges and we find the probability of the j&lt;sup&gt;th&lt;/sup&gt; type of voronoi edge. These “types” of voronoi edges are unique types of contacts formed by a pair of lipids sharing a voronoi edge. For example, lipidA-lipidA, lipidB-lipidB, … lipidZ-lipidZ are all the same kind of voronoi edge – they are edges between the same type of lipid to the same type of lipid. However, lipidA-lipidB, lipidA-lipidC, lipidB-lipidC are all different edges. As such, in a two-lipid system &lt;em&gt;E&lt;/em&gt;=2, in a three-lipid system &lt;em&gt;E&lt;/em&gt;=4, in a four-lipid system &lt;em&gt;E&lt;/em&gt;=7, in a five-lipid system &lt;em&gt;E&lt;/em&gt;=11 and so on. The log is in the base of &lt;em&gt;E&lt;/em&gt; such that the maximum value of &lt;em&gt;S&lt;sub&gt;mix&lt;/sub&gt;&lt;/em&gt; is always 1.&lt;/p&gt;

&lt;p&gt;In recently submitted work we used this method to calculate the mixing entropy only considering DPPC and DIPC lipids in a ternary mixture which includes cholesterol. As such, we only evaluated DPPC-DPPC = DIPC-DIPC and DPPC-DIPC voronoi edges.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/Membrane/SmixTesselExample.jpeg&quot; alt=&quot;Smix Tessel Example&quot; /&gt;&lt;br /&gt;
&lt;strong&gt;Figure&lt;/strong&gt; (Left) Visualization of a Voronoi Tessellation of lipid head group (x,y) coordinates (blue) in a slice of a  DPPC (purple), DIPC (pink), and cholesterol (black) mixture. (Right) Cartoon showing each type of voronoi edge when evaluating mixing entropy of only DPPC and DIPC.&lt;/p&gt;

&lt;p&gt;A python implementation of this method (with contribution from &lt;a href=&quot;https://scholar.google.com/citations?user=fdnxyPwAAAAJ&amp;amp;hl=en&quot;&gt;Asanga Bandara&lt;/a&gt; used to tessel DPPC-DIPC-CHOL mixtures in the Martini coarse-grained model using scipy, MDAnalysis to get (x,y) coordinates of lipid head groups, and multiprocessing for parallization with OpenMP is available &lt;a href=&quot;https://github.com/gpantel/MD_methods-and-analysis/blob/master/membrane_analysis/ternary_lipid_voronoi_edges.py&quot;&gt;on my github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Please cite:&lt;br /&gt;
G.A. Pantelopulos, T. Nagai, A. Bandara, A. Panahi, &amp;amp; J.E. Straub “Critical size dependence of domain formation observed in coarse-grained simulations of bilayers composed of ternary lipid mixtures,” &lt;em&gt;Submitted&lt;/em&gt; (2017)&lt;/p&gt;

&lt;p&gt;References:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Camesasca, M., Kaufman, M. &amp;amp; Manas-Zloczower, I. Quantifying Fluid Mixing with the Shannon Entropy. Macromol. Theory Simulations 15, 595–607 (2006).&lt;/li&gt;
  &lt;li&gt;Brandani, G. B. et al. Quantifying Disorder through Conditional Entropy: An Application to Fluid Mixing. PLoS One 8, e65617 (2013).&lt;/li&gt;
&lt;/ol&gt;</content><author><name>George A. Pantelopulos</name><email>gpantel@bu.edu</email></author><summary type="html">I discuss mixing entropy as an order parameter for lipid mixing and describe a Voronoi tessellation-based method and calculation using MDAnalysis and scipy.</summary></entry><entry><title type="html">2D Bond-Orientational Order for Lipid Membranes</title><link href="http://localhost:4000/analysis-method/2D_boo/" rel="alternate" type="text/html" title="2D Bond-Orientational Order for Lipid Membranes" /><published>2017-06-09T12:25:00-04:00</published><updated>2017-06-09T12:25:00-04:00</updated><id>http://localhost:4000/analysis-method/2D_boo</id><content type="html" xml:base="http://localhost:4000/analysis-method/2D_boo/">&lt;p&gt;I discuss the use of 2D Bond-Orientational Order to describe lipid phase in membrane and the use of projections to address membrane undulation when measuring.&lt;/p&gt;

&lt;script type=&quot;text/javascript&quot; async=&quot;&quot; src=&quot;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML&quot;&gt;
&lt;/script&gt;

&lt;h1 id=&quot;the-2d-bond-orientational-order-parameter&quot;&gt;The 2D Bond-Orientational Order Parameter&lt;/h1&gt;

&lt;p&gt;This past year, the famous 2D Bond-Orientational Order parameter, originally developd by Nelson and Halperin,[1] recieved some of the spotlight as part of the Nobel Prize in Physics, awarded to Thouless, Haldane, and Kosterlitz &lt;a href=&quot;https://www.nobelprize.org/nobel_prizes/physics/laureates/2016/press.html&quot;&gt;”for theoretical discoveries of topological phase transitions and topological phases of matter.”&lt;/a&gt; It has been used to describe solid, “hexatic”, and liquid phases of 2D systems. To describe bond-orientations of &lt;em&gt;n&lt;/em&gt;-fold order around the &lt;em&gt;k&lt;/em&gt;th particle in a system with &lt;em&gt;n&lt;/em&gt; nearest neighbors, each indexed as &lt;em&gt;l&lt;/em&gt;, the order parameter is:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\Psi_n^k = \sum^n_{l\ \epsilon\ nn(k)} \exp[in\theta_{lk}] = \sum^n_{l\ \epsilon\ nn(k)} \cos(n\theta_{lk}) + i\sin(n\theta_{lk})&lt;/script&gt;

&lt;p&gt;But typically only &lt;script type=&quot;math/tex&quot;&gt;\Psi_6^k&lt;/script&gt; is used as an order parameter:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\Psi_6^k = \sum^n_{l\ \epsilon\ nn(k)} \exp[i6\theta_{lk}]&lt;/script&gt;

&lt;p&gt;By doing this measurement, we get a complex vector which tells us the orientation of the hexagon and when we take norm of this complex vector (|&lt;script type=&quot;math/tex&quot;&gt;\Psi_6^k&lt;/script&gt;|) we get a number between 0 and 1 which tells us how close to a hexagon the orientation of &lt;em&gt;l&lt;/em&gt; points around &lt;em&gt;k&lt;/em&gt; are.&lt;/p&gt;

&lt;p&gt;Often when I’ve explained this order parameter to a colleague in chemistry it has been difficult to help them understand. Please see the following illustration, which should help your understanding of &lt;script type=&quot;math/tex&quot;&gt;\Psi_6^k&lt;/script&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/Membrane/Psi6_illustration.jpg&quot; alt=&quot;Illutration of Psi6&quot; /&gt;&lt;br /&gt;
&lt;strong&gt;Figure:&lt;/strong&gt; (Left) Illustration of a particle &lt;em&gt;k&lt;/em&gt; and it’s six nearest neighbors, indexed by &lt;em&gt;l&lt;/em&gt;, along with the reference vector, which is often selected to be (x,y) = (1,0). (Right) The orientation of the conceptual hexagon defined by nearest neighbors of &lt;em&gt;k&lt;/em&gt;, which can be described by the real (or imaginary) parts of &lt;script type=&quot;math/tex&quot;&gt;\Psi_6^k&lt;/script&gt;.&lt;/p&gt;

&lt;h1 id=&quot;psi_6k-and-positional-pair-correlation-functions-are-used-to-describe-phases-in-2d&quot;&gt;&lt;script type=&quot;math/tex&quot;&gt;\Psi_6^k&lt;/script&gt; and positional pair correlation functions are used to describe phases in 2D&lt;/h1&gt;

&lt;p&gt;For many years the character of 2D phase transitions in hard disks (2D circles that cannot overlap each-other but have no attractive or repulsive forces) has been debated. A 2011 &lt;a href=&quot;http://www.lps.ens.fr/~krauth/index.php/Bernard_Krauth_2011&quot;&gt;paper by Barnard and Krauth&lt;/a&gt;, along with some follow-up papers, seem to have put the debate to rest.[2]&lt;/p&gt;

&lt;p&gt;Pair-wise distance (&lt;em&gt;r&lt;/em&gt;) correlation functions of &lt;script type=&quot;math/tex&quot;&gt;\Psi_6^k&lt;/script&gt; (&lt;em&gt;g&lt;sub&gt;6&lt;/sub&gt;&lt;/em&gt;(&lt;em&gt;r&lt;/em&gt;)) and position (&lt;em&gt;g&lt;sub&gt;G&lt;/sub&gt;&lt;/em&gt;(&lt;em&gt;r&lt;/em&gt;)) have been used to identify solid, hexatic, and liquid 2D phases. This is done based on the functional form of decay of the correlation over pair-wise distance in the Kosterlitz-Thouless-Halperin-Nelson-Young (KTHNY) theory of 2D melting:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/Membrane/2D_phase_paircorrelations.jpg&quot; alt=&quot;Illutration of Psi6&quot; /&gt;&lt;br /&gt;
&lt;strong&gt;Figure&lt;/strong&gt; Example Voronoi tessellations of 2D systems in the solid, hexatic, and liquid state. Pair correlation functions of position (&lt;em&gt;g&lt;sub&gt;G&lt;/sub&gt;&lt;/em&gt;(&lt;em&gt;r&lt;/em&gt;)) and &lt;script type=&quot;math/tex&quot;&gt;\Psi_6^k&lt;/script&gt; (&lt;em&gt;g&lt;sub&gt;6&lt;/sub&gt;&lt;/em&gt;(&lt;em&gt;r&lt;/em&gt;)). &lt;script type=&quot;math/tex&quot;&gt;% &lt;![CDATA[
T^* = k_{\text{B}}T/&lt;U&gt; %]]&gt;&lt;/script&gt;. Voronoi tessellations credited to &lt;a href=&quot;https://grasp-lab.org/2013/06/18/hexatic/&quot;&gt;N. Vandewalle at GRASP&lt;/a&gt;.[3]&lt;/p&gt;

&lt;h1 id=&quot;interest-in-lipid-bilayers&quot;&gt;Interest in lipid bilayers&lt;/h1&gt;

&lt;p&gt;We may use this order parameter as a method to distinguish the thermodynamic phase of lipids. In the case of lipid phase separations to liquid ordered (L&lt;sub&gt;o&lt;/sub&gt;) and disordered (L&lt;sub&gt;d&lt;/sub&gt;) domains, we are able to see that the packing of each lipid (|&lt;script type=&quot;math/tex&quot;&gt;\Psi_6^k&lt;/script&gt;|) is clearly different between phases, though the bond-orientations of lipids (&lt;script type=&quot;math/tex&quot;&gt;\Psi_6^k&lt;/script&gt;) are uncorrelated, as expected of any liquid state.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/Membrane/2D_boo_phaseseparated.jpg&quot; alt=&quot;Phase separated 2D boo&quot; /&gt;&lt;br /&gt;
&lt;strong&gt;Figure&lt;/strong&gt; Tessellations of a phase separated 5406-lipid bilayer. Blue, red, and white dots represent lipid tails belonging to DPPC, DIPC, and CHOL lipids in the membrane. (Left) |&lt;script type=&quot;math/tex&quot;&gt;\Psi_6^k&lt;/script&gt;| shows clear separation between the &lt;em&gt;packing&lt;/em&gt; lipid domains, though &lt;script type=&quot;math/tex&quot;&gt;\Psi_6^k&lt;/script&gt; shows the &lt;em&gt;bond-orientation&lt;/em&gt; of lipids is not substantially different between L&lt;sub&gt;o&lt;/sub&gt; and L&lt;sub&gt;d&lt;/sub&gt; phases.&lt;/p&gt;

&lt;p&gt;We should also consider the following: Lipid bilayers are not simply 2D. There are undulations to the membrane surface that would, if not addressed, distort the measurement of &lt;script type=&quot;math/tex&quot;&gt;\Psi_6^k&lt;/script&gt;, as angles from the reference vector would include height mismatchings of the measured atoms. I address this via a plane fitting approach.&lt;/p&gt;

&lt;h1 id=&quot;plane-fitted-measurement-of-psi_6k&quot;&gt;Plane-fitted measurement of &lt;script type=&quot;math/tex&quot;&gt;\Psi_6^k&lt;/script&gt;&lt;/h1&gt;

&lt;p&gt;To address height mismatches of a lipid tail’s nearest neighbors, I fit a lipid tail and its six nearest neighbors to a plane of best fit, project the coordinates and reference vector into the plane, and measure &lt;script type=&quot;math/tex&quot;&gt;\Psi_6^k&lt;/script&gt; there.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/Membrane/Plane_fitting.jpg&quot; alt=&quot;NN plane Fitting&quot; /&gt;&lt;br /&gt;
&lt;strong&gt;Figure:&lt;/strong&gt; Coordinate representing a MARTINI lipid tail with coordinates representing its six nearest neighhbor tails transformed to lie on a plane that best-fits all seven points. The reference vector is transformed to lie in the plane as well. In this particular application, C2A, C2B (D2A, D2B) beads of DPPC (DIPC) are selected and the centroid of R[1-5] of CHOL are selected to represent lipid tails.&lt;/p&gt;

&lt;p&gt;If you’d like to check out an example script written to analyze MARTINI DPPC, DIPC, and CHOL lipid membranes using the MDAnalysis library to find these coordinates, please check out my &lt;a href=&quot;https://github.com/gpantel/MD_methods-and-analysis/blob/master/membrane_analysis/psi6_MARTINI_tail_example.py&quot;&gt;github&lt;/a&gt;. There, plane fitting is performed using &lt;a href=&quot;https://www.ltu.se/cms_fs/1.51590!/svd-fitting.pdf&quot;&gt;singular value decomposition of the coordinates&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Additionally, this past year saw a very nice use of &lt;script type=&quot;math/tex&quot;&gt;\Psi_6^k&lt;/script&gt; to describe a “hexatic-like” lipid phase of DPPC with the MARTINI coarse-grained model. It’s a pretty cool read.[4]&lt;/p&gt;

&lt;p&gt;Please cite:&lt;br /&gt;
G.A. Pantelopulos, T. Nagai, A. Bandara, A. Panahi, &amp;amp; J.E. Straub “Critical size dependence of domain formation observed in coarse-grained simulations of bilayers composed of ternary lipid mixtures,” &lt;em&gt;Submitted&lt;/em&gt; (2017)&lt;/p&gt;

&lt;p&gt;References:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;B.I. Halperin &amp;amp; D.R. Nelson “Theory of Two-Dimensional melting,” &lt;em&gt;Phys. Rev. Lett.&lt;/em&gt; &lt;strong&gt;41&lt;/strong&gt;, 121–124 (1978).&lt;/li&gt;
  &lt;li&gt;E.P. Bernard &amp;amp; W. Krauth “Two-Step Melting in Two Dimensions: First-Order Liquid-Hexatic Transition,” &lt;em&gt;Phys. Rev. Lett.&lt;/em&gt; &lt;strong&gt;107&lt;/strong&gt;, 155704 (2011).&lt;/li&gt;
  &lt;li&gt;J. Schockmel, E. Mersch, N. Vandewalle, &amp;amp; G. Lumay, “Melting of a confined monolayer of magnetized beads,” &lt;em&gt;Phys. Rev. E - Stat. Nonlinear, Soft Matter Phys.&lt;/em&gt; &lt;strong&gt;87&lt;/strong&gt;, 1–7 (2013).&lt;/li&gt;
  &lt;li&gt;S. Katira,  K.K. Mandadapu, S. Vaikuntanathan, B. Smit, &amp;amp; D. Chandler “Pre-transition effects mediate forces of assembly between transmembrane proteins,” &lt;em&gt;Elife&lt;/em&gt; &lt;strong&gt;5&lt;/strong&gt;, 1–8 (2016).&lt;/li&gt;
&lt;/ol&gt;</content><author><name>George A. Pantelopulos</name><email>gpantel@bu.edu</email></author><summary type="html">I discuss the use of 2D Bond-Orientational Order to describe lipid phase in membrane and the use of projections to address membrane undulation when measuring.</summary></entry><entry><title type="html">Measuring structural order parameters in intra- and inter-leaflet lipid clusters</title><link href="http://localhost:4000/analysis-method/domain_clustering/" rel="alternate" type="text/html" title="Measuring structural order parameters in intra- and inter-leaflet lipid clusters" /><published>2017-06-07T14:20:00-04:00</published><updated>2017-06-07T14:20:00-04:00</updated><id>http://localhost:4000/analysis-method/domain_clustering</id><content type="html" xml:base="http://localhost:4000/analysis-method/domain_clustering/">&lt;p&gt;I discuss use of hierarchical clustering to identify intra- and inter-leaflet clusters of lipids and analysis using MDAnalysis, scipy, and multiprocessing.&lt;/p&gt;

&lt;script type=&quot;text/javascript&quot; async=&quot;&quot; src=&quot;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML&quot;&gt;
&lt;/script&gt;

&lt;h1 id=&quot;lipid-phase-separation&quot;&gt;Lipid phase separation&lt;/h1&gt;

&lt;p&gt;The phase separation of complex mixtures of lipids in cell membranes has been the subject of hundreds of investigations. This phase separation can cause for the formation of “domains” of lipids in &lt;em&gt;different thermodynamic phases&lt;/em&gt;. Liquid ordered (L&lt;sub&gt;o&lt;/sub&gt;) and liquid disordered (L&lt;sub&gt;d&lt;/sub&gt;) phases have been the subject of many studies. A very simplified concept of phase separation is that, in a mixed state, all of the membrane exists in the L&lt;sub&gt;d&lt;/sub&gt; phase, but as high melting temperature lipids (e.g. saturated lipids, sphingomyelin) aggregate together with cholesterol, the L&lt;sub&gt;o&lt;/sub&gt; phase is formed.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/Membrane/Domain_Schematic_RB.jpg&quot; alt=&quot;Domain Schematic&quot; /&gt;&lt;br /&gt;
&lt;strong&gt;Figure:&lt;/strong&gt; Illustration of a macroscopic phase separation in a ternary lipid mixture with proteins.&lt;/p&gt;

&lt;p&gt;Of course, proteins can adopt different folded structures depending on the thermodynamic phase they sit within, and understanding the true structure of the true environment membrane proteins encounter is essential to the ultimate goal of understanding and manipulating the cell membrane.&lt;/p&gt;

&lt;h1 id=&quot;understanding-the-structure-of-lipid-domains&quot;&gt;Understanding the structure of lipid domains&lt;/h1&gt;

&lt;p&gt;Using molecular dynamics simulations we can understand the structure of lipids at any point in time &lt;em&gt;a priori&lt;/em&gt;. With such detailed information we can ask questions like “How does the structure of a lipid depend on the &lt;em&gt;size&lt;/em&gt; of a domain?”&lt;/p&gt;

&lt;p&gt;Of course we could answer this question as-is, but there is someting else very important to consider… lipid bilayers are a &lt;em&gt;bilayer&lt;/em&gt; – the distribution of lipids is never symmetric across the two leaflets. So we should consider how many lipids are part of a domain in reference to each side of the membrane. This is to say, we should decompose the number of lipids involved in a domain into intra- and inter-leaflet lipids, and then measure the mean structural order for all lipids as dependent on the number of intra- (&lt;em&gt;n&lt;/em&gt;) and inter- (&lt;em&gt;m&lt;/em&gt;) leaflet lipids in the domain.&lt;/p&gt;

&lt;p&gt;Currently, only coarse-grained models of lipid mixtures can reach an equilibrium spatial and structural distribution. I use the DPPC:DIPC:CHOL mixture in the MARTINI coarse-grained forcefield to study some general feature of phase separation. Many other people do, too.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/Membrane/Martini_models.jpg&quot; alt=&quot;Domain Schematic&quot; /&gt;&lt;br /&gt;
&lt;strong&gt;Figure:&lt;/strong&gt; (Left) Atomistic DPPC (130 atoms!) (Center) Schematic of MARTINI lipid bead names and restraints that cause for formation of different phases (12 atoms and ~10x larger integration time-step than atomistic!) (Right) CHOL model from Melo et. al. [1] is very rigid and uses virtual sites (v).&lt;/p&gt;

&lt;h1 id=&quot;clustering-lipids&quot;&gt;Clustering lipids&lt;/h1&gt;

&lt;p&gt;How do we cluster lipids to discover these domains? Most clutering algorithms require an input of &lt;em&gt;k&lt;/em&gt; numbers of clusters to be assigned. In our case, we don’t know how many clusters exist in the membrane at any point of time. We can use &lt;a href=&quot;https://en.wikipedia.org/wiki/Single-linkage_clustering&quot;&gt;hierarchical single-link distance-based clustering&lt;/a&gt; (HCA), because it’s easy to understand, easy to use, and makes no assumption of the number of clusters. Also, it’s in &lt;a href=&quot;ihttps://docs.scipy.org/doc/scipy-0.14.0/reference/generated/scipy.cluster.hierarchy.fclusterdata.html#scipy.cluster.hierarchy.fclusterdata&quot;&gt;scipy&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Studies of lipid domain formation are typically initated from an ideally-mixed state where all lipids are in a L&lt;sub&gt;d&lt;/sub&gt; thermodynamic phase. The L&lt;sub&gt;o&lt;/sub&gt; thermodynamic phase forms as high melting temperature lipids (e.g. DPPC) and cholesterol (CHOL) aggregate. As such, I am only analyzing domains formed from DPPC and cholesterol. Additionally, DPPC and CHOL pack together most tightly about the lipid tails. Because DPPC has two lipid tails, I cluster each lipid tail individually.&lt;/p&gt;

&lt;p&gt;I perform this clustering by&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Identifying all clusters of intra-leaflet lipids tails (C2A and C2B beads on DPPC, centroid of R[1-5] on CHOL) using HCA with a cutoff of 5.8 angstroms.&lt;/li&gt;
  &lt;li&gt;For each intra-leaflet cluster, identify lipids in contact on the opposite leaflet by discovering lipid tails (C2A and C2B beads on DPPC, centroid of R[1-5] on CHOL) within a cutoff of 7.0 angstroms.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/Membrane/n_m_schematic.jpg&quot; alt=&quot;Domain Schematic&quot; /&gt;&lt;br /&gt;
&lt;strong&gt;Figure&lt;/strong&gt; (Left) Illustration of one state of a ternay lipid bilayer of DPPC (blue), DIPC (red) and CHOL (black) with clusters identified in reference to the top leaflet. (Right) Representation of the lipid bilayer configuration at maximum values of &lt;em&gt;n&lt;/em&gt; and &lt;em&gt;m&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;On these clusters I analyze the liquid crystal order parameter &lt;script type=&quot;math/tex&quot;&gt;P_2&lt;/script&gt; and the bond-orientational order parameter &lt;script type=&quot;math/tex&quot;&gt;\Psi_6&lt;/script&gt;. &lt;a href=&quot;https://gpantel.github.io/analysis-method/2D_boo/&quot;&gt;I discuss &lt;script type=&quot;math/tex&quot;&gt;\Psi_6&lt;/script&gt; in another post&lt;/a&gt;. The mean order parameter of each cluster is evaluated, such that we have order parameters dependent on (&lt;em&gt;n,m&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;A script which implements all of these measurements is available on &lt;a href=&quot;https://github.com/gpantel/MD_methods-and-analysis/blob/master/membrane_analysis/compute_n_m_DPPC%2BDIPC%2BCHOL.py&quot;&gt;my github&lt;/a&gt;, which can easily be modified to perform this very same analysis with some other selected molecules. Feel free to message me if you’d like help to do this, but please read the comments first!&lt;/p&gt;

&lt;p&gt;Please cite:&lt;br /&gt;
G.A. Pantelopulos, T. Nagai, A. Bandara, A. Panahi, &amp;amp; J.E. Straub “Critical size dependence of domain formation observed in coarse-grained simulations of bilayers composed of ternary lipid mixtures,” &lt;em&gt;Submitted&lt;/em&gt; (2017)&lt;/p&gt;

&lt;p&gt;References:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;M.N. Melo, H.I. Ingolfsson, &amp;amp; S.J. Marrink “Parameters for Martini sterols and hopanoids based on a virtual-site description,” &lt;em&gt;J. Chem. Phys.&lt;/em&gt; &lt;strong&gt;143&lt;/strong&gt; 243152 (2015).&lt;/li&gt;
&lt;/ol&gt;</content><author><name>George A. Pantelopulos</name><email>gpantel@bu.edu</email></author><summary type="html">I discuss use of hierarchical clustering to identify intra- and inter-leaflet clusters of lipids and analysis using MDAnalysis, scipy, and multiprocessing.</summary></entry><entry><title type="html">Mass-Scaling Simulated Tempering for Optimizing Time-steps</title><link href="http://localhost:4000/computational-method/MSST/" rel="alternate" type="text/html" title="Mass-Scaling Simulated Tempering for Optimizing Time-steps" /><published>2017-06-06T14:45:00-04:00</published><updated>2017-06-06T14:45:00-04:00</updated><id>http://localhost:4000/computational-method/MSST</id><content type="html" xml:base="http://localhost:4000/computational-method/MSST/">&lt;p&gt;The simulated and parallel tempering are briefly discussed. I explain the MSST method and present its implementation in OpenMM.&lt;/p&gt;

&lt;script type=&quot;text/javascript&quot; async=&quot;&quot; src=&quot;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML&quot;&gt;
&lt;/script&gt;

&lt;h1 id=&quot;tempering&quot;&gt;Tempering&lt;/h1&gt;

&lt;p&gt;Sampling of the equilibrium state of a system with Hamiltonian &lt;em&gt;H&lt;sub&gt;i&lt;/sub&gt;&lt;/em&gt; can be hampered by barriers in the system free energy landscape. These barriers can be more easily crossed without prior knowledge of the free energy landscape via tempering the Hamiltonian.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/MSST/StrongTransitionPicture.jpg&quot; alt=&quot;Energy Landscape Example&quot; /&gt;&lt;br /&gt;
&lt;strong&gt;Figure:&lt;/strong&gt; The system order parameter at various realizations of a the Hamiltonian.&lt;/p&gt;

&lt;p&gt;The Hamiltonian is most commonly tempered by raising the system temperature (as the name implies).&lt;/p&gt;

&lt;h1 id=&quot;parallel-tempering-aka-replica-exchange-molecular-dynamics-remd&quot;&gt;Parallel Tempering aka Replica Exchange Molecular Dynamics (REMD)&lt;/h1&gt;

&lt;p&gt;With no prior knowledge of the system, parallel tempering with temperature is a simplistic method to quickly sample the equilibrium state of a Hamiltonian &lt;em&gt;H&lt;sub&gt;i&lt;/sub&gt;&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Typically, MD trajectories in each Hamiltonian are run in parallel and periodically swap temperature following the Metropolis-Hastings criterion.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;p = \text{min}\left(1,e^{(U_i - U_j)(\frac{1}{k_\text{B}T_i}  - \frac{1}{k_\text{B}T_j}) }\right)&lt;/script&gt;

&lt;p&gt;After successful temperature exchange, velocities are rescaled for what we should expect in the new temperature condition.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;v_i = v_i \sqrt{\frac{T_j}{T_i}},\quad  v_j = v_j \sqrt{\frac{T_i}{T_j}}&lt;/script&gt;

&lt;p&gt;The most typical method to attempt to exchange &lt;em&gt;i&lt;/em&gt; and &lt;em&gt;j&lt;/em&gt; simulation conditions is to alternatively select even and odd-numbered pairs of most-similar (neighboring) simulation conditions.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/MSST/potential_overlap.jpg&quot; alt=&quot;REMD schematic&quot; /&gt;&lt;br /&gt;
&lt;strong&gt;Figure:&lt;/strong&gt; Illustration of REMD with temperature replicas using even-odd pair neighbor swapping.&lt;/p&gt;

&lt;h1 id=&quot;simulated-tempering-st&quot;&gt;Simulated Tempering (ST)&lt;/h1&gt;

&lt;p&gt;Running parallel trajectories can be extremely expensive, so much so that the computational efficiency of sampling might be less than that of a typical MD simulation.&lt;/p&gt;

&lt;p&gt;Simulated Tempering (ST) employs a single trajectory with a temperature exchange criterion intended to achieve a random walk in temperature, requiring knowledge of the free energy landscape. MC swaps are similar to parallel tempering:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;p = \text{min}\left(1,e^{(\frac{1}{k_\text{B}T_i}  - \frac{1}{k_\text{B}T_j})U_i + a(T_i) - a(T_j)}\right)&lt;/script&gt;

&lt;p&gt;Where &lt;em&gt;a&lt;/em&gt;(&lt;strong&gt;&lt;em&gt;T&lt;/em&gt;&lt;/strong&gt;) is parameterized to both achieve a random walk in temperature space and preserve balance. Velocities are also rescaled, as in REMD:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;v' = v \sqrt{\frac{T_j}{T_i}}&lt;/script&gt;

&lt;p&gt;&lt;em&gt;a&lt;/em&gt;(&lt;strong&gt;&lt;em&gt;T&lt;/em&gt;&lt;/strong&gt;) is most commonly determined by:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Sufficient sampling with parallel tempering to estimate &lt;em&gt;a&lt;/em&gt;(&lt;strong&gt;&lt;em&gt;T&lt;/em&gt;&lt;/strong&gt;) via WHAM or MBAR&lt;/li&gt;
  &lt;li&gt;On the fly using the Wang-Landau algorithm&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&quot;http://openmm.org/&quot;&gt;OpenMM&lt;/a&gt; provides a very simple environment for writing efficient GPU-accelerated MD simulations.
GPU acceleration can enormously increase the computational efficiency of ST relative to REMD!&lt;/p&gt;

&lt;h1 id=&quot;mass-scaling-simulated-tempering-msst&quot;&gt;Mass-Scaling Simulated Tempering (MSST)&lt;/h1&gt;

&lt;p&gt;Molecular motion at high temperatures employed in tempering can require the use of small time-steps to avoid accumulative errors in kinetic energy. Time-step sizes can be scaled with temperature, but this is a needless cost.&lt;/p&gt;

&lt;p&gt;By manipulating the masses of all atoms in the system as dependent on temperature we can utilize one optimal time-step and which does not require velocity scaling!&lt;/p&gt;

&lt;p&gt;We may make all masses scale as &lt;script type=&quot;math/tex&quot;&gt;m_k(T_i) = m_{0,k}\frac{T_i}{T_0}&lt;/script&gt; where &lt;script type=&quot;math/tex&quot;&gt;m_0&lt;/script&gt; are the masses at initial the lowest temperature &lt;script type=&quot;math/tex&quot;&gt;T_0&lt;/script&gt;.&lt;/p&gt;

&lt;p&gt;As such, we have the kinetic energy: &lt;script type=&quot;math/tex&quot;&gt;K_i(v) = \sum^N_{k = 1}\frac{m_{0,k} \frac{T_i}{T_0}\mathbf{v}_k^2}{2}&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;And the ensemble weight factor: &lt;script type=&quot;math/tex&quot;&gt;w(q,v,T_i) = e^{-K_i(v)-U(q)/k_\text{B}T_i + g(T_i)} = \\ \text{exp} [{\sum^N_{k = 1}\frac{m_{0,k} \frac{T_i}{T_0}\mathbf{v}_k^2}{2 k_\text{B} T_i}-(U(q)/k_\text{B}T_i) + g(T_i)}]&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;in which we see that the velocity distributions are independent of temperature!&lt;/p&gt;

&lt;p&gt;Additionally, rather than scaling all masses in the system, a subset of the system may be mass-scaled by some arbitrary amount &lt;script type=&quot;math/tex&quot;&gt;\alpha&lt;/script&gt;, such that &lt;script type=&quot;math/tex&quot;&gt;m_k(T_i) = \alpha_{k,i} m_{0,k}\frac{T_i}{T_0}&lt;/script&gt; and velocities will then be re-scaled upon changing temperature as &lt;script type=&quot;math/tex&quot;&gt;v_k' = \sqrt{\frac{\alpha_{k,i}}{\alpha_{k,j}}} \sqrt{\frac{T_j}{T_i}} v_k&lt;/script&gt;.&lt;/p&gt;

&lt;p&gt;Doing this of course causes the loss of the special ability to find one optimal time-step for the simulation, but it can help reduce errors in integration. Additionally, the scaling of separate groups of atoms, such as protein hydrogens and sidechains to decrease viscosity, has been used to enhance sampling in protein simulations.[1]&lt;/p&gt;

&lt;p&gt;In a 2016 paper,[2] we performed MSST simulations of LJ fluid, coarse-grained lipid simulation, and atomistic Trp-cage folding, demonstrating the ability to use longer time-steps and reduce integration errors.&lt;/p&gt;

&lt;p&gt;Below is detailed the MSST implementation workflow in OpenMM, for which there is an example application with Trp-cage folding following the classic protein folding paper by Simmerling et. al.[3] &lt;a href=&quot;https://github.com/gpantel/MD_methods-and-analysis/tree/master/MSST&quot;&gt;on my github&lt;/a&gt;. This is a “hack” of OpenMM head developer &lt;a href=&quot;https://github.com/peastman&quot;&gt;Peter Eastman&lt;/a&gt;’s simulatedtempering.py.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/MSST/MSST_workflow.jpg&quot; alt=&quot;MSST workflow&quot; /&gt;&lt;br /&gt;
&lt;strong&gt;Figure:&lt;/strong&gt; Workflow for the MSST implementation in OpenMM.&lt;/p&gt;

&lt;p&gt;The  MSST method, or its accompanying Mass-Scaling Replica Exchange Method,[4,5] may be used to lengthen the time-step of simulations employing tempering. In most cases the change to velocities will often not matter as tempering simulations are conducted to measure ensemble-averaged structural proterties, only dependent on &lt;script type=&quot;math/tex&quot;&gt;U(\mathbf{q})&lt;/script&gt;.&lt;/p&gt;

&lt;p&gt;Please read and cite:&lt;br /&gt;
T. Nagai, G.A. Pantelopulos, T. Takahashi, &amp;amp; J.E. Straub “On the use of mass scaling for stable and efficient simulated tempering with molecular dynamics,” &lt;em&gt;J. Comp. Chem.&lt;/em&gt; &lt;strong&gt;27&lt;/strong&gt; 2017-2028 (2016).&lt;/p&gt;

&lt;p&gt;References:&lt;br /&gt;
[1] Lin, I.-C. &amp;amp; Tuckerman, M. E. “Enhanced Conformational Sampling of Peptides via Reduced Side-Chain and Solvent Masses,” &lt;em&gt;J. Phys. Chem. B&lt;/em&gt; &lt;strong&gt;114&lt;/strong&gt;, 15935–15940 (2010).&lt;br /&gt;
[2] T. Nagai, G.A. Pantelopulos, T. Takahashi, &amp;amp; J.E. Straub “On the use of mass scaling for stable and efficient simulated tempering with molecular dynamics,” &lt;em&gt;J. Comp. Chem.&lt;/em&gt; &lt;strong&gt;27&lt;/strong&gt; 2017-2028 (2016).
[3] Simmerling, C., Strockbine, B. &amp;amp; Roitberg, A. E. “All-atom structure prediction and folding simulations of a stable protein,” &lt;em&gt;J. Am. Chem. Soc.&lt;/em&gt; &lt;strong&gt;124&lt;/strong&gt;, 11258–11259 (2002).&lt;br /&gt;
[4] Nagai, T. &amp;amp; Takahashi, T. “Mass-scaling replica-exchange molecular dynamics optimizes computational resources with simpler algorithm,” &lt;em&gt;J. Chem. Phys.&lt;/em&gt; &lt;strong&gt;141&lt;/strong&gt;, (2014).&lt;br /&gt;
[5] Nagai, T. “General Formalism of Mass Scaling Approach for Replica-Exchange Molecular Dynamics and its Application,” &lt;em&gt;J. Phys. Soc. Japan&lt;/em&gt; &lt;strong&gt;86&lt;/strong&gt;, 14003 (2017).&lt;/p&gt;</content><author><name>George A. Pantelopulos</name><email>gpantel@bu.edu</email></author><summary type="html">The simulated and parallel tempering are briefly discussed. I explain the MSST method and present its implementation in OpenMM.</summary></entry></feed>